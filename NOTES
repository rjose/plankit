NOTES
=====

Feb 11, 2017
------------

>> Sat Feb 11 18:50:42 PST 2017
Let's start by creating all of the files that I've identified. Then, I want to
create some structures so I can create the globals. I'll add these to the
Makefile and get everything to build.


>> Sat Feb 11 19:12:09 PST 2017
I should use flex to parse numbers and strings. We can return a character to
indicate what type was returned.


>> Sat Feb 11 19:40:59 PST 2017
OK, let's create empty versions of all the files...Done!


>> Sat Feb 11 19:46:04 PST 2017
OK, let's create a get_word routine. I think we should leverage the lexer here
and include the type info as well as the word.


>> Sat Feb 11 19:59:04 PST 2017
OK, I have the get_token subroutine working. Let's distinguish between an int,
a double, and a word. After that, I think we should handle the search for a
word in the dictionary. Maybe we can do the search tomorrow.


>> Sat Feb 11 20:14:49 PST 2017
Let's take a break for today and then return by adding some functionality to
the dictionary.


Feb 12, 2017
------------

>> Sun Feb 12 07:44:23 PST 2017
Let's start by adding functionality to the dictionary. We need to create
the dictionary and search it.


>> Sun Feb 12 08:16:33 PST 2017
OK, we can build and free a dictionary. Let's take a break and then add
search to it. Once that's done, we can hook into an error routine.


>> Sun Feb 12 08:44:04 PST 2017
Let's add search and an error routine.


>> Sun Feb 12 08:58:59 PST 2017
OK, let's implement the push_param (at least the frame of it) and do some
error handling.


>> Sun Feb 12 09:04:01 PST 2017
Alright, I'm ready to add the setjmp and longjmp. Let's see how this works.


>> Sun Feb 12 09:27:49 PST 2017
Have error handling! Let's check in and then take a break. After the break, I'll
figure out a documentation style for this.


>> Sun Feb 12 11:23:55 PST 2017
Let's work out a documentation style and then apply it to all of our files.


<< (40 min) Sun Feb 12 12:03:16 PST 2017
Let's check in and then take a break. I think I've figured out a comment style
that works. I wonder what happens if we add doxygen comments to the inside
of a function?


>> Sun Feb 12 12:51:30 PST 2017
Let's add some basic documentation to each of our files.


>> Sun Feb 12 15:15:53 PST 2017
Let's add a simple word that can print a message


>> Sun Feb 12 15:30:33 PST 2017
OK, we can execute a simple word. Let's take a break and then free our
dictionary entries next. After that, let's see if we can push a param
onto the stack.


>> Sun Feb 12 17:40:08 PST 2017
Let's free the dictionary entries next.


>> Sun Feb 12 17:45:13 PST 2017
OK, let's document the entry functions.
